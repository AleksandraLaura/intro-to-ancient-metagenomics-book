# Before you Start {.unnumbered}

The summer school course that this textbook is derived from was designed to be as practical as possible. This means that most of the chapters are designed to act as a walkthrough to guide you through the steps on how to generate and analyse data for each of the major steps of an ancient metagenomics project.

The summer school utilised cloud computing to provide a consistent computing platform for all participants, however all tools and data demonstrated are open-source and publicly available.

::: {.callout-warning}
Bioinformatics often involve large computing resource requirements! While we aim to make example data and processing as efficient as possible, we cannot guarantee that they will all be able to work on standard laptops or desktop computing - most likely due to memory/RAM requirements. As a guide, the cloud nodes used during the summer school had 16 cores and 32 GB of RAM.
:::

To following the practical chapters of this text book, you will require:

- A unix based operating system (e.g., Linux, MacOS, or possibly Windows with Linux Subsystem - however the latter has not be tested ) 
- A corresponding Unix terminal
- An internet connection
- A web browser 
- A [`conda`](https://docs.conda.io/en/latest/miniconda.html) installation with [`bioconda`](https://bioconda.github.io/#usage) configured.
    - Conda is a very popular package manager for installing software in bioinformatics. `bioconda` is a the main source of bioinformatics software for conda.
    - To speed up installation, we would also highly recommend setting up the [`libmamba-solver`](https://www.anaconda.com/blog/a-faster-conda-for-a-growing-community)

For each chapter we will provide a link to a `tar` archive that will contain the raw data and a conda `yml` file that specifies the software environment for that chapter.

Before loading the environment for the exercises, the environment will need to be installed using the `yml` with the instructions below, and then activated. A list of the software in each chapter's environment can be found in the [Appendix](appendix.html#conda-environments).

## Creating a conda environment {.unnumbered}

Once `conda` is installed and `bioconda` configured, at the beginning of each chapter, to create the `conda` environment from the `yml` file, you will need to run the following:

1. Download the `conda` env on 

2. Within the resulting directory run the following conda command to install the software into it's dedicated environment 

    ```bash
    conda env create -f <env_file>.yml
    ```

    ::: {.callout-note}
    Note: you only have to run the environment creation once.
    :::

3. Follow the instructions as prompted. Once created, you can see a list of environments with

    ```bash
    conda env list
    ```

4. To load the relevant environment, you can run

    ```bash
    conda activate <name_of_envonment>.yml
    ```

5. Once finished with the chapter, you can deactivate the environment with 

    ```bash
    conda deactivate
    ```

To reuse the environment, just run step 4 and 5 as necessary.

::: {.callout-tip}
To delete a conda software environment, just get the path listed on `conda env list` and delete the folder with `rm -rf <path>`.
:::

## Additional Software {.unnumbered}

For some chapters you may need the following software/and or data manually installed, which are not available on `bioconda`:

- Docker (installation method will vary depending on your OS)
  - [Standard install](https://docs.docker.com/engine/install/ubuntu/)
  - Linux-nerd install

      ```bash
      sudo install -m 0755 -d /etc/apt/keyrings
      curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      sudo chmod a+r /etc/apt/keyrings/docker.gpg
      echo \
      "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
      "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
      sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      sudo apt-get update
      sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
      ## May need to do a reboot or something here
      sudo groupadd docker
      sudo usermod -aG docker $USER
      newgrp docker
      sudo reboot ## will kick you out, but it'll be back in a minute or two
      ```

- rename (if not already installed, e.g. on OSX)

    ```bash
    sudo apt install rename
    ```

- _De novo_ assembly
    - MetaWrap

    ```bash
    conda create -n metawrap-env python=2.7
    conda activate metawrap-env
    conda install biopython bwa maxbin2=2.2.7 metabat2 samtools=1.9
    cd ~/bin/
    git clone https://github.com/bxlab/metaWRAP.git
    echo "export PATH=$PATH:~/bin/metaWRAP/bin" >> ~/.bashrc
    ```

- Functional Profiling
    - HUMAnN3 UniRef database (where the functional providing conda environment is already activated - see the Functional Profiling chapter for more details)

        ```bash
        humann3_databases --download uniref uniref90_ec_filtered_diamond /vol/volume/5c-functional-genomics/humann3_db
        ```

- Phylogenomics
    - [Tempest](http://tree.bio.ed.ac.uk/download.html?name=tempest&id=102&num=3) (v1.5.3)
    - It is also recommended to assign the following `bash` variable so you can access the tool without the full path

        ```bash
        export tempest='bash /home/ubuntu/bin/TempEst_v1.5.3/bin/tempest'
        ```

    - [MEGAX](https://www.megasoftware.net) (v11.0.11)

- Authentication and Decontamination <!-- TODO: update to use path method like e.g. metaWrap/tempest -->

    - Sourcetracker

        ```bash
        cd /<path>/<to>/authentication-decontamination/sourcetracker/
        git clone https://github.com/danknights/sourcetracker.git

        ## patch due to R update
        sed -i '538,539s/^/#/' sourcetracker/src/SourceTracker.r
        ```

    - decOM <!-- TODO: remove with bioconda env once available  -->

        ```bash
        cd /<path>/<to>/authentication-decontamination/decom
        git clone https://github.com/CamilaDuitama/decOM.git  
        cd decOM  
        conda env create -n decOM --file environment.yml  
        conda deactivate
        conda activate decOM  

        export PATH=/absolute/path/to/decOM:${PATH}
        ```

- Ancient Metagenomic Pipelines <!-- TODO: update to use path method like e.g. metaWrap/tempest -->

        ```bash
        cd /<path>/<to>/ancient-metagenomic-pipelines/
        git clone https://github.com/NBISweden/aMeta
        cd aMeta
        conda env create -f workflow/envs/environment.yaml
        conda activate aMeta
        ```